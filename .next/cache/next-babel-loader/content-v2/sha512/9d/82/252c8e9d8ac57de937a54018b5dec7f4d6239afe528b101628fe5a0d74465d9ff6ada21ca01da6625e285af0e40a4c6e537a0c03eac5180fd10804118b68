{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\dev\\\\nextjs\\\\reviews\\\\top-app-demo\\\\components\\\\Rating\\\\Rating.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport styles from './Rating.module.css';\nimport cn from 'classnames';\nimport StarIcon from './star.svg';\nimport { useEffect, useState } from 'react';\nexport const Rating = (_ref) => {\n  let {\n    isEditable = false,\n    rating,\n    setRating\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"isEditable\", \"rating\", \"setRating\"]);\n\n  const {\n    0: ratingArray,\n    1: setRatingArray\n  } = useState(new Array(5).fill( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)));\n  useEffect(() => {\n    constructRating(rating);\n  }, [rating]);\n\n  const constructRating = currentRating => {\n    const updatedArray = ratingArray.map((r, i) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cn(styles.star, {\n          [styles.filled]: i < currentRating,\n          [styles.editable]: isEditable\n        }),\n        onMouseEnter: () => changeDispay(i + 1),\n        onMouseLeave: () => changeDispay(rating),\n        onClick: () => onClick(i + 1),\n        children: /*#__PURE__*/_jsxDEV(StarIcon, {\n          tabIndex: isEditable ? 0 : -1,\n          onKeyDown: e => isEditable && handleSpace(i + 1, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this);\n    });\n    setRatingArray(updatedArray);\n  };\n\n  const changeDispay = i => {\n    if (!isEditable) {\n      return;\n    }\n\n    constructRating(i);\n  };\n\n  const onClick = i => {\n    if (!isEditable || !setRating) {\n      return;\n    }\n\n    setRating(i);\n  };\n\n  const handleSpace = (i, e) => {\n    if (e.code != 'Space' || !setRating) {\n      return;\n    }\n\n    setRating(i);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n    children: ratingArray.map((r, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: r\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 32\n    }, this))\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};","map":{"version":3,"sources":["G:/dev/nextjs/reviews/top-app-demo/components/Rating/Rating.tsx"],"names":["styles","cn","StarIcon","useEffect","useState","Rating","isEditable","rating","setRating","props","ratingArray","setRatingArray","Array","fill","constructRating","currentRating","updatedArray","map","r","i","star","filled","editable","changeDispay","onClick","e","handleSpace","code"],"mappings":";;;;;;;;;;;;;;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAmD,OAAnD;AAEA,OAAO,MAAMC,MAAM,GAAG,UAAmF;AAAA,MAAlF;AAAEC,IAAAA,UAAU,GAAG,KAAf;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA;AAA9B,GAAkF;AAAA,MAAtCC,KAAsC;;AACxG,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCP,QAAQ,CAAgB,IAAIQ,KAAJ,CAAU,CAAV,EAAaC,IAAb,eAAkB,qCAAlB,CAAhB,CAA9C;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACfW,IAAAA,eAAe,CAACP,MAAD,CAAf;AACA,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,QAAMO,eAAe,GAAIC,aAAD,IAA2B;AAClD,UAAMC,YAAY,GAAGN,WAAW,CAACO,GAAZ,CAAgB,CAACC,CAAD,EAAiBC,CAAjB,KAA+B;AACnE,0BACC;AACC,QAAA,SAAS,EAAElB,EAAE,CAACD,MAAM,CAACoB,IAAR,EAAc;AAC1B,WAACpB,MAAM,CAACqB,MAAR,GAAiBF,CAAC,GAAGJ,aADK;AAE1B,WAACf,MAAM,CAACsB,QAAR,GAAmBhB;AAFO,SAAd,CADd;AAKC,QAAA,YAAY,EAAE,MAAMiB,YAAY,CAACJ,CAAC,GAAG,CAAL,CALjC;AAMC,QAAA,YAAY,EAAE,MAAMI,YAAY,CAAChB,MAAD,CANjC;AAOC,QAAA,OAAO,EAAE,MAAMiB,OAAO,CAACL,CAAC,GAAG,CAAL,CAPvB;AAAA,+BASC,QAAC,QAAD;AAEC,UAAA,QAAQ,EAAEb,UAAU,GAAG,CAAH,GAAO,CAAC,CAF7B;AAGC,UAAA,SAAS,EAAGmB,CAAD,IAAkCnB,UAAU,IAAIoB,WAAW,CAACP,CAAC,GAAG,CAAL,EAAQM,CAAR;AAHvE;AAAA;AAAA;AAAA;AAAA;AATD;AAAA;AAAA;AAAA;AAAA,cADD;AAkBA,KAnBoB,CAArB;AAoBAd,IAAAA,cAAc,CAACK,YAAD,CAAd;AACA,GAtBD;;AAwBA,QAAMO,YAAY,GAAIJ,CAAD,IAAe;AACnC,QAAI,CAACb,UAAL,EAAiB;AAChB;AACA;;AACDQ,IAAAA,eAAe,CAACK,CAAD,CAAf;AACA,GALD;;AAOA,QAAMK,OAAO,GAAIL,CAAD,IAAe;AAC9B,QAAI,CAACb,UAAD,IAAe,CAACE,SAApB,EAA+B;AAC9B;AACA;;AACDA,IAAAA,SAAS,CAACW,CAAD,CAAT;AACA,GALD;;AAOA,QAAMO,WAAW,GAAG,CAACP,CAAD,EAAYM,CAAZ,KAA6C;AAChE,QAAIA,CAAC,CAACE,IAAF,IAAU,OAAV,IAAqB,CAACnB,SAA1B,EAAqC;AACpC;AACA;;AACDA,IAAAA,SAAS,CAACW,CAAD,CAAT;AACA,GALD;;AAOA,sBACC,+CAASV,KAAT;AAAA,cACEC,WAAW,CAACO,GAAZ,CAAgB,CAACC,CAAD,EAAIC,CAAJ,kBAAW;AAAA,gBAAeD;AAAf,OAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,YAA3B;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAzDM","sourcesContent":["import { RatingProps } from './Rating.props';\r\nimport styles from './Rating.module.css';\r\nimport cn from 'classnames';\r\nimport StarIcon from './star.svg';\r\nimport { useEffect, useState, KeyboardEvent } from 'react';\r\n\r\nexport const Rating = ({ isEditable = false, rating, setRating, ...props }: RatingProps): JSX.Element => {\r\n\tconst [ratingArray, setRatingArray] = useState<JSX.Element[]>(new Array(5).fill(<></>));\r\n\r\n\tuseEffect(() => {\r\n\t\tconstructRating(rating);\r\n\t}, [rating]);\r\n\r\n\tconst constructRating = (currentRating: number) => {\r\n\t\tconst updatedArray = ratingArray.map((r: JSX.Element, i: number) => {\r\n\t\t\treturn (\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName={cn(styles.star, {\r\n\t\t\t\t\t\t[styles.filled]: i < currentRating,\r\n\t\t\t\t\t\t[styles.editable]: isEditable\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tonMouseEnter={() => changeDispay(i + 1)}\r\n\t\t\t\t\tonMouseLeave={() => changeDispay(rating)}\r\n\t\t\t\t\tonClick={() => onClick(i + 1)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<StarIcon\r\n\r\n\t\t\t\t\t\ttabIndex={isEditable ? 0 : -1}\r\n\t\t\t\t\t\tonKeyDown={(e: KeyboardEvent<SVGElement>) => isEditable && handleSpace(i + 1, e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\r\n\t\t\t);\r\n\t\t});\r\n\t\tsetRatingArray(updatedArray);\r\n\t};\r\n\r\n\tconst changeDispay = (i: number) => {\r\n\t\tif (!isEditable) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconstructRating(i);\r\n\t};\r\n\r\n\tconst onClick = (i: number) => {\r\n\t\tif (!isEditable || !setRating) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetRating(i);\r\n\t};\r\n\r\n\tconst handleSpace = (i: number, e: KeyboardEvent<SVGElement>) => {\r\n\t\tif (e.code != 'Space' || !setRating) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetRating(i);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div {...props}>\r\n\t\t\t{ratingArray.map((r, i) => (<span key={i}>{r}</span>))}\r\n\t\t</div>\r\n\t);\r\n};"]},"metadata":{},"sourceType":"module"}